- hosts: all
  gather_facts: false

  tasks:

  - name: Install pip3
    package: name=python3-pip

  - name: Install python3 compose module
    pip: name=docker-compose executable=pip3

  - command: "docker inspect --format=\\{\\{.State.Status\\}\\} {{ inventory_hostname }}"
    register: nodestatus
    tags: status

  - debug: var=nodestatus.stdout
    tags: status

  - block:

    - docker_container:
        name: "{{ inventory_hostname }}"
        state: stopped

    - file:
        path: "/var/lib/docker/volumes/thundermint/_data/db"
        state: absent

    - docker_container:
        name: "{{ inventory_hostname }}"
        state: started

    - wait_for:
        port: 50000

    - command: "/usr/local/bin/bootstrap -t all2all  -l '{{ ansible_play_hosts | map('extract', hostvars, 'ansible_host') | list | to_json }}' -n {{ ansible_host }} -p 49999"
      delegate_to: localhost
      register: reply

    - debug:
        msg: "bootstrap reply {{ reply.stdout }}"

    when: hostvars['node-1'].nodestatus.stdout != "running" or hostvars['node-2'].nodestatus.stdout != "running" or hostvars['node-3'].nodestatus.stdout != "running" or hostvars['node-4'].nodestatus.stdout != "running"
